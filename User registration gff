# Import necessary modules from flask import Flask, render_template, request, redirect, url_for, session from flask_sqlalchemy import SQLAlchemy from werkzeug.security import generate_password_hash, check_password_hash # Initialize Flask app app = Flask(__name__) app.secret_key = 'your_secret_key' # Configure SQLAlchemy for database connection (SQLite for simplicity) app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///fundflow.db' db = SQLAlchemy(app) # Define User model for the database class User(db.Model): id = db.Column(db.Integer, primary_key=True) username = db.Column(db.String(80), unique=True, nullable=False) password = db.Column(db.String(120), nullable=False) # Create the database (for demonstration purposes) db.create_all() # Define routes and functions @app.route('/') def home(): return 'Welcome to FundFlow!' @app.route('/register', methods=['GET', 'POST']) def register(): if request.method == 'POST': username = request.form['username'] password = request.form['password'] hashed_password = generate_password_hash(password, method='sha256') new_user = User(username=username, password=hashed_password) db.session.add(new_user) db.session.commit() return redirect(url_for('login')) return render_template('register.html') @app.route('/login', methods=['GET', 'POST']) def login(): if request.method == 'POST': username = request.form['username'] password = request.form['password'] user = User.query.filter_by(username=username).first() if user and check_password_hash(user.password, password): session['user_id'] = user.id return 'Logged in successfully!' return render_template('login.html') @app.route('/logout') def logout(): session.pop('user_id', None) return 'Logged out successfully!' if __name__ == '__main__': app.run(debug=True) 
